{"code":"var isoPoint = /** @class */ (function () {\r\n    function isoPoint(x, y, z) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        if (z === void 0) { z = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    isoPoint.prototype.equals = function (a) {\r\n        return (a.x === this.x && a.y === this.y && a.z === this.z);\r\n    };\r\n    isoPoint.prototype.set = function (x, y, z) {\r\n        this.x = x || 0;\r\n        this.y = y || ((y !== 0) ? this.x : 0);\r\n        this.z = z || ((typeof y === 'undefined') ? this.x : 0);\r\n    };\r\n    isoPoint.prototype.setTo = function (x, y, z) {\r\n        return this.set(x, y, z);\r\n    };\r\n    isoPoint.prototype.add = function (x, y, z) {\r\n        this.x += x || 0;\r\n        this.y += y || 0;\r\n        this.z += z || 0;\r\n        return this;\r\n    };\r\n    isoPoint.prototype.subtract = function (x, y, z) {\r\n        this.x -= x || 0;\r\n        this.y -= y || 0;\r\n        this.z -= z || 0;\r\n        return this;\r\n    };\r\n    isoPoint.prototype.multiply = function (x, y, z) {\r\n        this.x *= x || 1;\r\n        this.y *= y || 1;\r\n        this.z *= z || 1;\r\n        return this;\r\n    };\r\n    isoPoint.prototype.divide = function (x, y, z) {\r\n        this.x /= x || 1;\r\n        this.y /= y || 1;\r\n        this.z /= z || 1;\r\n        return this;\r\n    };\r\n    isoPoint.add = function (a, b, out) {\r\n        if (out === void 0) { out = new isoPoint(); }\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        out.z = a.z + b.z;\r\n        return out;\r\n    };\r\n    isoPoint.subtract = function (a, b, out) {\r\n        if (out === void 0) { out = new isoPoint(); }\r\n        out.x = a.x - b.x;\r\n        out.y = a.y - b.y;\r\n        out.z = a.z - b.z;\r\n        return out;\r\n    };\r\n    isoPoint.multiply = function (a, b, out) {\r\n        if (out === void 0) { out = new isoPoint(); }\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        out.z = a.z * b.z;\r\n        return out;\r\n    };\r\n    isoPoint.divide = function (a, b, out) {\r\n        if (out === void 0) { out = new isoPoint(); }\r\n        out.x = a.x / b.x;\r\n        out.y = a.y / b.y;\r\n        out.z = a.z / b.z;\r\n        return out;\r\n    };\r\n    isoPoint.equals = function (a, b) {\r\n        return (a.x === b.x && a.y === b.y && a.z === b.z);\r\n    };\r\n    return isoPoint;\r\n}());\r\nexport default isoPoint;\r\n","references":[]}
